{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","console","log","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","resp","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAceA,EAbF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,GAExB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCgBLK,EAtBE,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAIf,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCGlBC,EAdG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIA,UAAU,gCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEXI,EATA,SAACC,GAEZ,OADAC,QAAQC,IAAIF,GAER,qBAAKG,MAAO,CAAEC,SAAS,SAAUC,OAAO,kBAAmBC,OAAO,SAAlE,SACKN,EAAMO,YCgBJC,E,kDAlBX,WAAYR,GAAQ,IAAD,8BACf,cAAMA,IACDS,MAAO,CACRC,UAAU,GAHC,E,qDAMnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAE5B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,yDAEAG,KAAKb,MAAMO,a,GAdHQ,aCkDZC,E,kDA7CX,aAAc,IAAD,8BACT,gBAkBJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAjBzC,EAAKZ,MAAQ,CACTpB,OAAQ,GACR8B,YAAa,IALR,E,qDAQb,WAAoB,IAAD,OACfG,MAAM,8CACLC,MAAK,SAAAC,GACF,OAAOA,EAAKC,UAEfF,MAAK,SAAAG,GACF,EAAKZ,SAAS,CAACzB,OAAOqC,S,oBAS9B,WACI,MAAgCb,KAAKJ,MAA7BpB,EAAR,EAAQA,OAAQ8B,EAAhB,EAAgBA,YACVQ,EAAiBtC,EAAOuC,QAAO,SAAAC,GACjC,OAAOA,EAAM/C,KAAKgD,cAAcC,SAASZ,EAAYW,kBAExD,OAAQzC,EAAO2C,OAGR,sBAAK/C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWU,aAAgBkB,KAAKI,iBAChC,cAAC,EAAD,UACA,cAAC,EAAD,UACI,cAAC,EAAD,CAAU5B,OAAUsC,WAPjC,uD,GA9BOZ,aCMHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c41d0df8.chunk.js","sourcesContent":["//we need to return one element only \r\nconst Card = ({name, email, id}) =>{\r\n    //const {name, email, id} = props; //ES6 destructuring\r\n    return (\r\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt='Robots' src={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import Card from '../components/Card';\r\n\r\nconst CardList = ({robots})=>{\r\n   /* if(true){\r\n        throw new Error('nooooo') //Error Example show\r\n    }*/\r\n    return(\r\n        <div>\r\n            {\r\n                robots.map((user, i) =>{\r\n                    return ( \r\n                        <Card \r\n                            key={i} \r\n                            id={robots[i].id} \r\n                            name={robots[i].name} \r\n                            email={robots[i].email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div> \r\n    );\r\n}\r\n\r\nexport default CardList;","\r\nconst SearchBox = ({searchField, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input\r\n                className='pa3 ba b--green bg-light-blue' \r\n                type='search'\r\n                placeholder='search robots'\r\n                onChange={searchChange}\r\n                //value={searchField}\r\n            />\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default SearchBox;","\r\nconst Scroll = (props) =>{\r\n    console.log(props);\r\n    return (\r\n        <div style={{ overflow:'scroll', border:'5px solid black', height:'800px'} }>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            hasError: false\r\n        }\r\n    }\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError:true});\r\n    }\r\n    render(){\r\n        if( this.state.hasError){\r\n            return <h1> oopps. that is no good</h1>\r\n        }else{\r\n            return this.props.children; \r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\n\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        //we have two state robots and searchfield \r\n        this.state = {\r\n            robots: [],\r\n            searchfield: '', \r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(resp =>{\r\n            return resp.json();\r\n        })\r\n        .then(users =>{\r\n            this.setState({robots:users});\r\n        });\r\n    \r\n    }\r\n\r\n    onSearchChange = (event) =>{\r\n        this.setState({searchfield: event.target.value});\r\n    }\r\n\r\n    render(){\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        });\r\n         return !robots.length ?\r\n           <h1>Loading Robots...</h1>\r\n         :(\r\n                <div className='tc'>\r\n                    <h1 className='f2'>ROBOTFRIENDS</h1>\r\n                    <SearchBox searchChange = {this.onSearchChange}/>\r\n                    <Scroll>\r\n                    <ErrorBoundry>\r\n                        <CardList robots = {filteredRobots}/>\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n//import Card from './Card';\r\nimport App from './containers/App'\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons'\r\n\r\n//distroctory with this {} when you have more that one parameter\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}